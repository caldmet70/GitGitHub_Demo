Hello, world!

How are you doing today?

Welcome to Data Science!

I am Sam and I like Ice-Cream.

This is our first commit.




Parmods-MacBook-Pro:Desktop parmodkumar$ cd GitGitHub
Parmods-MacBook-Pro:GitGitHub parmodkumar$ ls
Git_GitHubTutorial.txt	foo.txt
Parmods-MacBook-Pro:GitGitHub parmodkumar$ git config --global user.name "Parmod Kumar"
Parmods-MacBook-Pro:GitGitHub parmodkumar$ git config --global user.email "caldmet70@gmail.com"
Parmods-MacBook-Pro:GitGitHub parmodkumar$ 

Parmods-MacBook-Pro:GitGitHub parmodkumar$ git config --list
user.name=Parmod Kumar
user.email=caldmet70@gmail.com
push.default=upstream
core.editor=TextEdit -n -w
merg.conflictstyle=diff3
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
core.ignorecase=true
core.precomposeunicode=true
Parmods-MacBook-Pro:GitGitHub parmodkumar$ clear
Parmods-MacBook-Pro:GitGitHub parmodkumar$ git config user.email
caldmet70@gmail.com
Parmods-MacBook-Pro:GitGitHub parmodkumar$ git help
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Find by binary search the change that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Forward-port local commits to the updated upstream head
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

Parmods-MacBook-Pro:GitGitHub parmodkumar$ git help commit

## All the help related to commit will be displayed here. ## pressing q will lead to the main command line (out of this help)

Parmods-MacBook-Pro:GitGitHub parmodkumar$ pwd
/Users/parmodkumar/Desktop/GitGitHub

## In windows we need to type: cd ~ (this will take you to the home directory); then you can hit $ pwd (this should display the home directory); cd ..(take one step back to the parent directory of the present directory)
Parmods-MacBook-Pro:GitGitHub parmodkumar$ ls
Git_GitHubTutorial.txt	foo.txt
Parmods-MacBook-Pro:GitGitHub parmodkumar$ git init
Reinitialized existing Git repository in /Users/parmodkumar/Desktop/GitGitHub/.git/
Parmods-MacBook-Pro:GitGitHub parmodkumar$ ls -la
total 16
drwxr-xr-x   5 parmodkumar  staff   170 Apr 14 08:58 .
drwx------+ 82 parmodkumar  staff  2788 Apr 14 08:23 ..
drwxr-xr-x  13 parmodkumar  staff   442 Apr 14 08:58 .git
-rw-r--r--@  1 parmodkumar  staff  3741 Apr 14 08:58 Git_GitHubTutorial.txt
-rw-r--r--@  1 parmodkumar  staff    40 Mar  2 22:00 foo.txt

(## this will list not only the regular files and folders but all the other hidden stuff as well)
(## we should not edit these files, we should not try to find them or change as well, by doing so the entire project will get messed up)
Parmods-MacBook-Pro:GitGitHub parmodkumar$ clear
Parmods-MacBook-Pro:GitGitHub parmodkumar$ 
Parmods-MacBook-Pro:GitGitHub parmodkumar$ git add . (## this means add all the changes that we make to our project and hit enter)